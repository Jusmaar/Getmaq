
// $xs: $device-width-xs;
// $sm: $device-width-sm;
// $md: $device-width-md;
// $lg: $device-width-lg;
@mixin media($media) {
	/* Inicio Agregado por LEO DEV*/
	@if $media == minxs {
		@media (max-width: $xs) { @content; }
	}
	@if $media == maxxs {
		@media (min-width: $xs+1px) and (max-width: $sm) { @content; }
	}
	/* Fin Agregado por LEO DEV*/
	@if $media == xs {
		@media (max-width: $sm) { @content; }
	}
	@else if $media == sm {
		@media (min-width: $sm+1px) and (max-width: $md) { @content; }
	}
	@else if $media == md {
		@media (min-width: $md+1px) and (max-width: $lg) { @content; }
	}
	@else if $media == lg {
		@media (min-width: $lg+1px) { @content; }
	}
	// breakpoints jose
	@else if $media== desk {
     @media (min-width: 75em) { @content ; }
	}
	@else if $media== tbland {
		@media (min-width: 64em) { @content ; }
	}
	@else if $media== tb {
		@media (min-width: 48em) { @content ; }
	}
	@else if $media== mbland{
		@media (min-width: 40em)  { @content ; }
	}
    @else if $media== mbls {
		@media (max-width: 45em) and (orientation: landscape){ @content ; }
	}
	@else if $media== mb {
		@media (min-width: 23em) and (orientation: landscape){ @content ; }
	}
	// breakpoints jose
}
@mixin ease-default{
	@include prefixer(transition,all 500ms cubic-bezier(0.250, 0.100, 0.250, 1.000));/* ease (default) */
	@include prefixer(transition-timing-function,cubic-bezier(0.250, 0.100, 0.250, 1.000));/* ease (default) */
}
/* Inicio Genera los prefijos de todos los navegadores */
@mixin prefixer($property, $value, $prefixes: webkit moz ms o) {
	@each $prefix in $prefixes {
		#{'-' + $prefix + '-' + $property}: #{$value};
	}
	#{$property}: #{$value};
}
@mixin prefixertwo($property, $value, $prefixes: webkit moz ms o) {
	#{$property}: #{$value};
	@each $prefix in $prefixes {
		#{$property}: #{'-' + $prefix + '-' + $value};
	}
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {@content;}
    @-moz-keyframes #{$animationName} {@content;}
    @-ms-keyframes #{$animationName} {@content;}
    @-o-keyframes #{$animationName} {@content;}
    @keyframes #{$animationName} {@content;}
}

/* Fin Genera los prefijos de todos los navegadores */
@mixin cuadrado($width,$height: $width){
	width: $width;
	height: $height;
}
@mixin transitiondefault($time){
	@include prefixer(transition, all $time cubic-bezier(0.250, 0.100, 0.250, 1.000));
	@include prefixer(transition-timing-function, cubic-bezier(0.250, 0.100, 0.250, 1.000));
}
/* Inicio iframe responsive */
@mixin iframebase{
	position: relative;
    height: 0;
    overflow: hidden;
	>iframe{
		position: absolute;
	    top:0;
	    left: 0;
	    width: 100%;
	    height: 100%;
	}
}
@mixin iframe16by9{
    padding-bottom: 56.25%;
	@include iframebase;
}
@mixin iframe4by3{
    padding-bottom: 75%;
    @include iframebase;
}
/* Fin iframe responsive */
/* Inicio ajustar texto a la caja usa tres puntos suspensivos al final y en una sola linea */
@mixin ajustacontrespuntos{
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}
/* Fin ajustar texto a la caja usa tres puntos suspensivos al final y en una sola linea */
/* Inicio ajustar texto a la caja */
@mixin ajustatexto{
    white-space: pre;
    white-space: pre-wrap;
    white-space: pre-line;
    white-space: -pre-wrap;
    white-space: -o-pre-wrap;
    white-space: -moz-pre-wrap;
    white-space: -hp-pre-wrap;
    word-wrap: break-word;
}
/* Fin ajustar texto a la caja */


/* Inicio convierte imagen a escala de grises por css y svg 
*  Para asegurar mayor compatibilidad agrgar en cualquier parte de la pagina el siguiente code:
* 	<div style="width:0;height:0;"><svg version="1.1" baseProfile="full" xmlns="http://www.w3.org/2000/svg"><filter id="grayscale"><fecolormatrix type="matrix" values="0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"/></filter></svg></div>
*/
@mixin grayscale{
    filter: url('#grayscale'); /* Versión SVG para IE10, Chrome 17, FF3.5, Safari 5.2 and Opera 11.6 */
	-webkit-filter: grayscale(100%);
	-moz-filter: grayscale(100%);
	-ms-filter: grayscale(100%);
	-o-filter: grayscale(100%);
	filter: grayscale(100%); /* Para cuando es estándar funcione en todos */
	filter: Gray(); /* IE4-8 and 9 */
}
/* Fin convierte imagen a escala de grises por css y svg  */

/* Inicio sombra material design header */
	/// Gives a card depth effect.
	/// @param {Number} $depth - depth level (between 1 and 5)
	/// @link http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality Google Design
	/// @requires {function} top-shadow
	/// @requires {function} bottom-shadow
	@mixin card-shadow($depth) {
	  @if $depth < 1 {
	    box-shadow: none;
	  } @else if $depth > 5 {
	    @warn "Invalid $depth `#{$depth}` for mixin `card`.";
	  } @else {
	    box-shadow: bottom-shadow($depth), top-shadow($depth);  
	  }
	}
	/// Computes a top-shadow for a card effect.
	/// @param {Number} $depth - depth level
	/// @return {List}
	@function top-shadow($depth) {
	  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
	  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
	  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

	  @return 0 $primary-offset $blur $color;
	}

	/// Computes a bottom-shadow for a card effect.
	/// @param {Number} $depth - depth level
	/// @return {List}
	@function bottom-shadow($depth) {
	  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
	  $blur: nth(1 3 3 5 6, $depth) * 4px;
	  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

	  @return 0 $primary-offset $blur $color;
	}

/* Fin somba material design header */



// @mixin input-placeholder{
// 	&::-webkit-input-placeholder { /* Chrome/Opera/Safari */
// 		@content;
// 	}
// 	&::-moz-placeholder { /* Firefox 19+ */
// 		@content;
// 	}
// 	&:-ms-input-placeholder { /* IE 10+ */
// 		@content;
// 	}
// 	&:-moz-placeholder { /* Firefox 18- */
// 		@content;
// 	}
// }